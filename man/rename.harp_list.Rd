% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_methods.R
\name{rename.harp_list}
\alias{rename.harp_list}
\alias{rename_with.harp_list}
\title{Rename columns}
\usage{
\method{rename}{harp_list}(.data, ...)

\method{rename_with}{harp_list}(.data, .fn, ...)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{...}{For \code{rename()}: <\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Use
\code{new_name = old_name} to rename selected variables.

For \code{rename_with()}: additional arguments passed onto \code{.fn}.}

\item{.fn}{A function used to transform the selected \code{.cols}. Should
return a character vector the same length as the input.}
}
\description{
This is the \code{harp_list} method for \code{\link[dplyr]{rename}()}. It
works in exactly the same way except that a \code{harp_list} is returned.
To use this function, the \code{dplyr} package must be attached and the
\code{.harp_list} suffix can be dropped.
}
\details{
For \code{rename_with}, the \code{.fn} argument is mandatory and following
\code{\link[dplyr]{rename}}, the \code{.cols} argument selects all columns
to rename by default.
}
