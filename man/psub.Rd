% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility_functions.R
\name{psub}
\alias{psub}
\title{Piecewise pattern matching and replacement}
\usage{
psub(x, pattern, replacement, exact = TRUE, ...)
}
\arguments{
\item{x}{A character vector.}

\item{pattern}{A vector of patterns to replace.}

\item{replacement}{A character vector of the same length as \code{pattern}
with the corresponding replacements.}

\item{exact}{A logical to denote whether \code{pattern} is to be an exact
match (the default). When FALSE, \code{pattern} is treated as a regular
expression.}

\item{...}{Other arguments to \code{gsub}.}
}
\value{
A character vector of the same length as \code{x} with matched
patterns replaced.
}
\description{
\code{psub} calls \code{\link[base]{gsub}} for each pattern / replacement
pair. Where a pattern is not found, a warning is issued and nothing is
replaced for that pattern / replacement pair. Unlike
\code{\link[base]{gsub}}, the first argument is the vector where matches
are sought, meaning that it can be easily used in a pipeline.
}
\details{
The default behaviour is to look for an exact match of pattern. This means
that only those elements in \code{x} that fully match \code{pattern} are
replaced. See examples for how this works in practice.
}
\examples{
# Capitalise some letters
psub(letters[1:7], c("a", "c", "e"), c("A", "C", "E"))

# By default exact matches are sought
psub("ace", c("a", "c", "e"), c("A", "C", "E"))

# Use exact = FALSE to replace a regular expression
psub("ace", c("a", "c", "e"), c("A", "C", "E"), exact = FALSE)

# Replace selected values in a vector
psub(c("one", "two", "three"), c("one", "three"), c("ONE", "THREE"))
}
