% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_methods.R
\name{mutate.harp_list}
\alias{mutate.harp_list}
\alias{transmute.harp_list}
\title{Create, modify and delete columns}
\usage{
\method{mutate}{harp_list}(.data, ...)

\method{transmute}{harp_list}(.data, ...)
}
\arguments{
\item{.data}{A data frame, data frame extension (e.g. a tibble), or a
lazy data frame (e.g. from dbplyr or dtplyr). See \emph{Methods}, below, for
more details.}

\item{...}{<\code{\link[rlang:args_data_masking]{data-masking}}> Name-value pairs.
The name gives the name of the column in the output.

The value can be:
\itemize{
\item A vector of length 1, which will be recycled to the correct length.
\item A vector the same length as the current group (or the whole data frame
if ungrouped).
\item \code{NULL}, to remove the column.
\item A data frame or tibble, to create multiple columns in the output.
}}
}
\description{
This is the \code{harp_list} method for \code{\link[dplyr]{mutate}()}. It
works in exactly the same way except that a \code{harp_list} is returned.
To use this function, the \code{dplyr} package must be attached and the
\code{.harp_list} suffix can be dropped. Note that
\code{\link[dplyr]{transmute}()} does the same as
\code{\link[dplyr]{mutate}()}, except that only the modified and / or
created columns are kept.
}
