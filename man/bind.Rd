% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyr_methods.R
\name{bind}
\alias{bind}
\title{Bind data frames in a list}
\usage{
bind(..., .id = NULL)
}
\arguments{
\item{...}{A list or a harp_list object}

\item{.id}{The name of the column to be used to identify each element of
the list in the resulting data frame}
}
\value{
A data frame with the class of the first data frame in the list
}
\description{
\code{bind} is a wrapper around \code{\link[dplyr]{bind_rows}} with a
dedicated method for harp_list objects. In all other cases
\code{\link[dplyr]{bind_rows}} is called.
}
\details{
For harp_list objects, the name of each element in the list is added to each
data frame as a column, with the heading as given in the \code{.id}
argument. For forecast data the prefix before "_det" for deteriministic
forcasts and the prefix before "_mbr***" for ensemble forecasts are
removed from the column headings. For multimodel ensembles, this could
lead to problems with columns having the same heading.

It should be noted that no check is made on the classes of the data frames
in the harp_list object, and the class of the first is used in the output.
}
\examples{
bind(
  as_harp_list(
    a = as_harp_df(data.frame(
      valid_dttm = as_dttm(seq_dttm(2021010100, 2021010123)),
      a_det = runif(24)
    )),
    b = as_harp_df(data.frame(
      valid_dttm = as_dttm(seq_dttm(2021010100, 2021010123)),
      b_det = runif(24)
    ))
  )
)
bind(
  as_harp_list(
    a = as_harp_df(data.frame(
      valid_dttm = as_dttm(seq_dttm(2021010100, 2021010123)),
      a_mbr000  = runif(24),
      a_mbr001  = runif(24)
    )),
    b = as_harp_df(data.frame(
      valid_dttm = as_dttm(seq_dttm(2021010100, 2021010123)),
      b_mbr000 = runif(24),
      b_mbr001 = runif(24)
    ))
  )
)
}
